generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model adherence {
  id                    String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String      @db.Uuid
  medication_id         String      @db.Uuid
  taken_time            DateTime?   @db.Timestamptz(6)
  status                String?     @default("pending")
  notes                 String?
  reminder_sent         Boolean?    @default(false)
  side_effects_reported String[]
  dosage_taken          Json?       @db.Json
  created_at            DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?   @default(now()) @db.Timestamptz(6)
  scheduled_datetime    DateTime    @db.Timestamptz(6)
  medications           medications @relation(fields: [medication_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adherence_medication")
  users                 users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_adherence_user")
  reminders             reminders[]

  @@index([medication_id], map: "idx_adherence_medication_id")
  @@index([user_id], map: "idx_adherence_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model medications {
  id                    String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String      @db.Uuid
  name                  String
  dosage                Json        @db.Json
  frequency             Json        @db.Json
  scheduled_times       String[]
  instructions          String?
  start_date            DateTime?   @default(now()) @db.Timestamptz(6)
  end_date              DateTime?   @db.Timestamptz(6)
  refill_reminder       Json?       @db.Json
  side_effects_to_watch String[]
  active                Boolean?    @default(true)
  medication_type       String?
  image_url             String?
  created_at            DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?   @default(now()) @db.Timestamptz(6)
  adherence             adherence[]
  users                 users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_medications_user")
  reminders             reminders[]

  @@index([user_id], map: "idx_medications_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model reminders {
  id                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String      @db.Uuid
  medication_id      String      @db.Uuid
  status             String?     @default("pending")
  channels           Json?       @default("{\"email\": {\"enabled\": true, \"sent\": false}, \"sms\": {\"enabled\": false, \"sent\": false}}") @db.Json
  message            String?
  retry_count        Int?        @default(0)
  last_retry         DateTime?   @db.Timestamptz(6)
  adherence_id       String?     @db.Uuid
  created_at         DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?   @default(now()) @db.Timestamptz(6)
  scheduled_datetime DateTime    @db.Timestamptz(6)
  adherence          adherence?  @relation(fields: [adherence_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_reminders_adherence")
  medications        medications @relation(fields: [medication_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_reminders_medication")
  users              users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_reminders_user")

  @@index([adherence_id], map: "idx_reminders_adherence_id")
  @@index([medication_id], map: "idx_reminders_medication_id")
  @@index([user_id], map: "idx_reminders_user_id")
  @@schema("public")
}

model risk_history {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String   @db.Uuid
  medication_id String   @db.Uuid
  date          DateTime @db.Date
  risk_score    Float
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)

  @@index([medication_id], map: "idx_risk_history_medication_id")
  @@index([user_id], map: "idx_risk_history_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_settings {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String    @unique @db.Uuid
  email_enabled            Boolean
  preferred_times          String[]
  timezone                 String
  notification_preferences Json?
  created_at               DateTime? @default(now()) @db.Timestamp(6)
  updated_at               DateTime? @default(now()) @db.Timestamp(6)
  users                    users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_settings_user")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                      String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                   String?        @unique
  name                    String?
  password                String?
  date_of_birth           String?
  gender                  String?
  allergies               String[]
  conditions              String[]
  is_admin                Boolean?       @default(false)
  phone_number            String?
  emergency_contact       Json?
  created_at              DateTime?      @default(now()) @db.Timestamp(6)
  updated_at              DateTime?      @default(now()) @db.Timestamp(6)
  subscription_status     String?        @default("free")
  subscription_plan       String?        @default("free")
  subscription_expires_at DateTime?      @db.Timestamp(6)
  subscription_features   Json?          @default("{\"data_export\": false, \"basic_reminders\": true, \"custom_reminders\": false, \"risk_predictions\": false, \"advanced_analytics\": false, \"medication_tracking\": true}")
  adherence               adherence[]
  medications             medications[]
  reminders               reminders[]
  user_settings           user_settings?

  @@schema("public")
}
